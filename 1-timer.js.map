{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n//www\nconst dateRezult = document.querySelector('#datetime-picker');\nconst dateBtn = document.querySelector('[data-start]');\nconst rezultDays = document.querySelector('[data-days]');\nconst rezultHours = document.querySelector('[data-hours]');\nconst rezultMinutes = document.querySelector('[data-minutes]');\nconst rezultSeconds = document.querySelector('[data-seconds]');\nlet userSelectedDate = 0;\nlet intervalId = 0;\ndateBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      return iziToast.error({\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n    }\n    userSelectedDate = selectedDates[0];\n    dateBtn.disabled = false;\n  },\n};\nflatpickr(dateRezult, options);\n\nfunction wiggleWiggleTimer() {\n  dateRezult.disabled = true;\n  dateBtn.disabled = true;\n\n  intervalId = setInterval(clockUp, 1000);\n  return;\n}\n\nfunction clockUp() {\n  const curentTime = userSelectedDate - new Date();\n\n  if (curentTime <= 0) {\n    dateRezult.disabled = false;\n\n    clearInterval(intervalId);\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(curentTime);\n\n  rezultDays.textContent = String(days).padStart(2, 0);\n  rezultHours.textContent = String(hours).padStart(2, 0);\n  rezultMinutes.textContent = String(minutes).padStart(2, 0);\n  rezultSeconds.textContent = String(seconds).padStart(2, 0);\n}\ndateBtn.addEventListener('click', wiggleWiggleTimer);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["dateRezult","dateBtn","rezultDays","rezultHours","rezultMinutes","rezultSeconds","userSelectedDate","intervalId","options","selectedDates","iziToast","flatpickr","wiggleWiggleTimer","clockUp","curentTime","days","hours","minutes","seconds","convertMs","ms"],"mappings":"qFASA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAgB,SAAS,cAAc,gBAAgB,EACvDC,EAAgB,SAAS,cAAc,gBAAgB,EAC7D,IAAIC,EAAmB,EACnBC,EAAa,EACjBN,EAAQ,SAAW,GAEnB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,GAAK,IAAI,KAC1B,OAAOC,EAAS,MAAM,CACpB,SAAU,WACV,QAAS,oCACjB,CAAO,EAEHJ,EAAmBG,EAAc,CAAC,EAClCR,EAAQ,SAAW,EACpB,CACH,EACAU,EAAUX,EAAYQ,CAAO,EAE7B,SAASI,GAAoB,CAC3BZ,EAAW,SAAW,GACtBC,EAAQ,SAAW,GAEnBM,EAAa,YAAYM,EAAS,GAAI,CAExC,CAEA,SAASA,GAAU,CACjB,MAAMC,EAAaR,EAAmB,IAAI,KAE1C,GAAIQ,GAAc,EAAG,CACnBd,EAAW,SAAW,GAEtB,cAAcO,CAAU,EACxB,MACD,CAED,KAAM,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAU,EAE9DZ,EAAW,YAAc,OAAOa,CAAI,EAAE,SAAS,EAAG,CAAC,EACnDZ,EAAY,YAAc,OAAOa,CAAK,EAAE,SAAS,EAAG,CAAC,EACrDZ,EAAc,YAAc,OAAOa,CAAO,EAAE,SAAS,EAAG,CAAC,EACzDZ,EAAc,YAAc,OAAOa,CAAO,EAAE,SAAS,EAAG,CAAC,CAC3D,CACAjB,EAAQ,iBAAiB,QAASW,CAAiB,EAEnD,SAASO,EAAUC,EAAI,CAQrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}